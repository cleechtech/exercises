{
  "name": "7digital-api",
  "version": "0.15.2",
  "description": "7digital API client for nodeJS",
  "homepage": "https://github.com/raoulmillais/node-7digital-api",
  "repository": {
    "type": "git",
    "url": "git://github.com/raoulmillais/node-7digital-api.git"
  },
  "keywords": [
    "api",
    "nodejs",
    "7digital"
  ],
  "author": {
    "name": "Raoul Millais",
    "email": "raoul@raoulmillais.com",
    "url": "http://www.raoulmillais.com/"
  },
  "licenses": [
    "BSD"
  ],
  "engines": [
    "node >= 0.6.0"
  ],
  "scripts": {
    "test": "mocha spec/"
  },
  "main": "index.js",
  "dependencies": {
    "xml2js": "~0.4.1",
    "oauth": "0.9.5",
    "step": "~0.0.5",
    "underscore": "1.1.7"
  },
  "devDependencies": {
    "docco": "~0.6.3",
    "jshint": "~2.4.0",
    "mocha": "~1.15.1",
    "chai": "~1.8.1",
    "sinon": "~1.7.3",
    "browserify": "~3.33.0"
  },
  "contributors": [
    {
      "name": "Raoul Millais",
      "email": "raoul.millais@7digital.com",
      "url": "http://github.com/raoulmillais"
    },
    {
      "name": "Tony To",
      "email": "tony.to@7digital.com",
      "url": "http://tonyto.es"
    },
    {
      "name": "Dan Haller",
      "email": "dan.haller@7digital.com",
      "url": "http://github.com/raoulmillais"
    },
    {
      "name": "Dave Aitken",
      "email": "dave.aitken@7digital.com",
      "url": "http://github.com/actionshrimp"
    },
    {
      "name": "Chris Watson",
      "email": "chris.watson@7digital.com",
      "url": "http://github.com/c24w"
    }
  ],
  "readme": "![7digital](http://i.imgur.com/StUnvCy.png?1)\n# Node.js API Client\n\nCurrent head build status:\n\n[![Build Status](https://travis-ci.org/raoulmillais/node-7digital-api.png?branch=master)](http://travis-ci.org/raoulmillais/node-7digital-api)\n\n## About 7digital\n\n\n7digital.com is an online music store operating in over 16 countries and\noffering more than 11 million high quality DRM free MP3s (320kbps) from all\nmajor labels and wide range of idependent labels and distributors. 7digital\nAPI will give you access to the full catalogue including high quality album\nart, 30s preview clips for all tracks, commissions on sales, integrated\npurchasing and full length streaming. More details at\n[developer.7digital.net](http://developer.7digital.net/)\n\n### What is this?\n\n\nA serverside javascript client for the 7digital API .\nFull code documentation for the most recent release can be found [here](http://raoulmillais.github.com/node-7digital-api/api.html)\n\n### Installation\n\n\n[![NPM](https://nodei.co/npm/7digital-api.png?downloads=true)](https://nodei.co/npm/7digital-api/)\n\nInstall it via [npm](http://npmjs.org/)\n\n```bash\nnpm install --save 7digital-api\n```\n\n### Usage\n\n\nSee the examples folder for examples of how to use this.  If you have included\n7digital-api in your dependencies in the package.json file, you can use the\nlike so:\n\n```javascript\nvar api = require('7digital-api'),\n\tartists = new api.Artists();\n\nartists.getReleases({ artistid: 1 }, function(err, data) {\n\tconsole.dir(data);\n});\n```\n\nTo supply your OAuth credentials or if you want XML responses, you can use the\nconfigure function.  Here is how you can do so:\n\n\n```javascript\nvar api, artists;\n\napi = require('7digital-api').configure({\n\tformat: 'XML',\n\tconsumerkey: 'MY_KEY_HERE',\n\tconsumersecret: 'MY_SECRET_HERE',\n});\n\nartists = new api.Artists();\n\nartists.getReleases({ artistid: 1 }, function(err, data) {\n\tconsole.dir(data);\n});\n```\n\nSee [developer.7digital.net](http://developer.7digital.net/) for full details\nof the API endpoints and the parameters they accept.\n\n### Making requests on behalf of a user to OAuth protected endpoints\n\n\nThere is a bundled OAuth helper that configures the oauth library with the\nnecessary settings for the API and formats the authorise URL appropriately.\n\n```javascript\nrequire('7digital-api').oauth,\n```\n\nSee oauth.js in the examples folder for an example of the OAuth flow for\nacquiring an authorised access token and secret that you will need to access\nany of the protected endpoints on behalf of a user.\n\n```bash\nnode examples\\oauth.js\n```\n\n### Running the tests\n\nTo run the unit tests:\n\n    npm test\n\nThere are also integration tests. Tests for various error handling scenarios\nare run against a stub 7d api. It can be installed\nwith:\n\n    npm install git://github.com/7digital/api-stub.git\n\nSome of the integration tests (around the client's handling of OAuth) run\nagainst the real 7d api. In order for these tests to work, several environment\nvariables need to be set:\n\n- `NODE_API_CLIENT_TESTS_CONSUMER_KEY`\n- `NODE_API_CLIENT_TESTS_CONSUMER_SECRET`\n\nYour 7d api key and secret, which can be obtained from\nhttps://api-signup.7digital.com\n\n- `NODE_API_CLIENT_TESTS_VOUCHER_CODE`\n\nThe code for a voucher which can be applied to a basket containing an item of\n1p, used for a two-legged OAuth test.\n\n- `NODE_API_CLIENT_TESTS_USER_TOKEN`\n- `NODE_API_CLIENT_TESTS_USER_SECRET`\n\nA token and secret for access to any user's resources for a given consumer key\nand secret. These are used for 3-legged OAuth tests, and can be obtained by\nrunning `node ./examples/oauth.js` and following the prompts.\n\nIf these vars are set, the tests can then be run with:\n\n    mocha spec-integration/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/raoulmillais/node-7digital-api/issues"
  },
  "_id": "7digital-api@0.15.2",
  "_shasum": "ca79454a3a0f73b251742e19f095b75b054adf73",
  "_from": "7digital-api@",
  "_resolved": "https://registry.npmjs.org/7digital-api/-/7digital-api-0.15.2.tgz"
}
